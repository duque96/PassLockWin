package com.passlock.async;

public class AsyncGetAccounts {
	public static void getAccounts() {
		map = new HashMap<>();
        try {
            SharedPreferences preferences = activity.getSharedPreferences("MyPreferences", Context.MODE_PRIVATE);
            String IMEI = preferences.getString("IMEI", "false");

            URL mongoDB = new URL(Utilidades.URLFIRST + IMEI + Utilidades.URLLAST);
            HttpsURLConnection con = (HttpsURLConnection) mongoDB.openConnection();
            con.setRequestMethod("GET");

            InputStream response = con.getInputStream();
            InputStreamReader responseReader =
                    new InputStreamReader(response, "UTF-8");

            JsonReader jsonReader = new JsonReader(responseReader);
            jsonReader.beginArray();
            String email = null;
            String password = null;
            String site;
            String _id = null;
            while (jsonReader.hasNext()) {
                jsonReader.beginObject();
                int count = 0;
                while (jsonReader.hasNext()) {
                    if (count == 0) {
                        jsonReader.skipValue();
                        jsonReader.beginObject();
                        while (jsonReader.hasNext()){
                            String key = jsonReader.nextName();
                            if (key.equals("$oid"))
                                _id = jsonReader.nextString();
                        }
                        jsonReader.endObject();
                        count++;
                    } else {
                        String key = jsonReader.nextName();
                        switch (key) {
                            case "email":
                                email = jsonReader.nextString();
                                break;
                            case "password":
                                password = AESCrypt.decrypt(Utilidades.PW, jsonReader.nextString());
                                break;
                            case "site":
                                site = jsonReader.nextString();
                                List<String> list = new ArrayList<>();
                                list.add(email);
                                list.add(password);
                                list.add(_id);
                                map.put(site, list);
                                count = 0;
                                break;
                        }
                    }
                }
                jsonReader.endObject();
            }

            jsonReader.endArray();
            jsonReader.close();
            con.disconnect();
        } catch (IOException e) {
            e.printStackTrace();
            return false;
        } catch (GeneralSecurityException e) {
            e.printStackTrace();
        }
        return true;F
	}
}
